class Solution:
  def coinChange(self, coins: List[int], amount: int) -> int:
    
    n = len(coins)
    dp = [1e9 for _ in range(amount + 1)]
    dp[0] = 0
    #dp[i] represents the total amount i requires this many minimum denominations to reach
    # coins = sorted(coins)
    for i in range(1, amount + 1):
      for c in coins:
        if i - c >= 0 and dp[i - c] != 1e9:  
          dp[i] = min(dp[i], 1 + dp[i - c])


    if dp[amount] == 1e9:
      return -1
    return dp[amount]